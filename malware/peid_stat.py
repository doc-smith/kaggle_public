#!/usr/bin/env python

import argparse
import collections
import json
import sys


def read_labels(labels_filename):
    labels = {}
    with open(labels_filename, "r") as inp:
        first_line = True
        for line in inp:
            if first_line:
                first_line = False
            else:
                a, b = line.rstrip().split(",")
                labels[a.strip('"')] = int(b)
    return labels


def main():
    arg_parser = argparse.ArgumentParser()
    arg_parser.add_argument("peid_file")
    arg_parser.add_argument("labels_file")
    args = arg_parser.parse_args()

    labels = read_labels(args.labels_file)

    peid_stat = collections.defaultdict(lambda: collections.defaultdict(set))
    with open(args.peid_file, "r") as inp:
        for line in inp:
            peid = json.loads(line)
            y = labels[peid["binary_id"]]
            if len(peid["peid"]):
                for match in peid["peid"]:
                    peid_name = match["matches"][1][0][0]
                    peid_stat[peid_name][y].add(peid["binary_id"])
            else:
                peid_stat["nothing"][y].add(peid["binary_id"])

    label_counts = collections.Counter(labels.values())

    for peid_name, stat in peid_stat.iteritems():
        print peid_name
        for label, count in sorted(stat.items(), key=lambda (k, v): k):
            print "  {0}: {1} ({2:.2f} %)".format(
                label, len(count), len(count) / float(label_counts[label]))



if __name__ == "__main__":
    sys.exit(main())
